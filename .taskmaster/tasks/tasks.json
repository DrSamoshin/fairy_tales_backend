{
  "master": {
    "tasks": [
      {
        "id": 1,
        "title": "Система аутентификации через Apple Sign In",
        "description": "Реализовать полную систему аутентификации пользователей через Apple ID",
        "status": "done",
        "priority": "high",
        "dependencies": [],
        "details": "Система аутентификации через Apple Sign In полностью реализована с поддержкой автоматической регистрации, верификации токенов и refresh механизма.",
        "testStrategy": "Тестирование Apple токенов, проверка автоматической регистрации",
        "subtasks": [
          {
            "id": 1,
            "title": "Интеграция с Apple Sign In API",
            "description": "Настройка и интеграция с Apple Sign In",
            "status": "done",
            "details": "Реализовано в app/services/apple_signin_service.py"
          },
          {
            "id": 2,
            "title": "Верификация Apple токенов",
            "description": "Безопасная верификация токенов от Apple",
            "status": "done",
            "details": "Реализовано в app/services/apple_verification.py"
          },
          {
            "id": 3,
            "title": "Автоматическая регистрация пользователей",
            "description": "Создание пользователя при первом входе",
            "status": "done",
            "details": "Реализовано в модели User и сервисе аутентификации"
          },
          {
            "id": 4,
            "title": "Система refresh токенов",
            "description": "Поддержание сессии через refresh токены",
            "status": "done",
            "details": "API endpoint /api/v1/auth/refresh/ реализован"
          }
        ]
      },
      {
        "id": 2,
        "title": "ИИ-генерация персонализированных сказок",
        "description": "Система генерации детских сказок с использованием OpenAI GPT-4o-mini",
        "status": "done",
        "priority": "high",
        "dependencies": [],
        "details": "Полная система генерации сказок с персонализацией по возрасту, стилю, языку и другим параметрам. Включает потоковую генерацию.",
        "testStrategy": "Тестирование различных параметров генерации, проверка качества контента",
        "subtasks": [
          {
            "id": 1,
            "title": "Интеграция с OpenAI GPT-4o-mini",
            "description": "Настройка и подключение к OpenAI API",
            "status": "done",
            "details": "Реализовано в app/services/story_generation.py"
          },
          {
            "id": 2,
            "title": "Система промптов для детского контента",
            "description": "Разработка безопасных промптов для генерации детских сказок",
            "status": "done",
            "details": "Строгие системные промпты с фильтрацией неподходящего контента"
          },
          {
            "id": 3,
            "title": "Персонализация по параметрам",
            "description": "Настройка генерации под возраст, стиль, язык, имя героя",
            "status": "done",
            "details": "Схема StoryGenerateRequest с полной персонализацией"
          },
          {
            "id": 4,
            "title": "Потоковая генерация",
            "description": "Streaming API для real-time генерации сказок",
            "status": "done",
            "details": "Endpoint /api/v1/stories/generate-stream/ с SSE"
          },
          {
            "id": 5,
            "title": "Многоязычность (5 языков)",
            "description": "Поддержка английского, русского, испанского, французского, немецкого",
            "status": "done",
            "details": "Language enum и адаптация промптов под каждый язык"
          }
        ]
      },
      {
        "id": 3,
        "title": "Управление пользовательскими историями",
        "description": "CRUD операции для сохранения и управления сгенерированными сказками",
        "status": "done",
        "priority": "medium",
        "dependencies": [
          "1"
        ],
        "details": "Полная система управления историями с пагинацией, мягким удалением и фильтрацией.",
        "testStrategy": "Тестирование CRUD операций, проверка пагинации",
        "subtasks": [
          {
            "id": 1,
            "title": "Сохранение сгенерированных сказок",
            "description": "Автоматическое сохранение созданных историй",
            "status": "done",
            "details": "Реализовано в story_service.py"
          },
          {
            "id": 2,
            "title": "Просмотр списка пользовательских сказок",
            "description": "API для получения списка историй пользователя",
            "status": "done",
            "details": "GET /api/v1/stories/ с пагинацией"
          },
          {
            "id": 3,
            "title": "Пагинация для больших списков",
            "description": "Эффективная пагинация списков сказок",
            "status": "done",
            "details": "Query параметры skip/limit с валидацией"
          },
          {
            "id": 4,
            "title": "Мягкое удаление историй",
            "description": "Безопасное удаление с возможностью восстановления",
            "status": "done",
            "details": "Поле is_deleted в модели Story"
          }
        ]
      },
      {
        "id": 4,
        "title": "База данных и модели данных",
        "description": "Проектирование и реализация структуры базы данных",
        "status": "done",
        "priority": "high",
        "dependencies": [],
        "details": "PostgreSQL база с оптимизированными индексами и миграциями через Alembic.",
        "testStrategy": "Тестирование производительности запросов, проверка индексов",
        "subtasks": [
          {
            "id": 1,
            "title": "Модель пользователя (User)",
            "description": "Создание модели пользователя с поддержкой Apple ID",
            "status": "done",
            "details": "app/db/models/user.py с индексами"
          },
          {
            "id": 2,
            "title": "Модель сказки (Story)",
            "description": "Модель для хранения сказок с метаданными",
            "status": "done",
            "details": "app/db/models/story.py с полными метаданными"
          },
          {
            "id": 3,
            "title": "Оптимизированные индексы",
            "description": "Создание индексов для производительности",
            "status": "done",
            "details": "Композитные и частичные индексы в моделях"
          },
          {
            "id": 4,
            "title": "Миграции через Alembic",
            "description": "Настройка системы миграций базы данных",
            "status": "done",
            "details": "alembic/ директория с init миграцией"
          }
        ]
      },
      {
        "id": 5,
        "title": "API эндпоинты и документация",
        "description": "Создание REST API с автоматической документацией",
        "status": "done",
        "priority": "high",
        "dependencies": [
          "1",
          "2",
          "3"
        ],
        "details": "Полный набор API эндпоинтов с FastAPI автодокументацией и OpenAPI схемой.",
        "testStrategy": "API тестирование, проверка документации",
        "subtasks": [
          {
            "id": 1,
            "title": "Эндпоинты аутентификации",
            "description": "API для входа и refresh токенов",
            "status": "done",
            "details": "/api/v1/auth/* endpoints реализованы"
          },
          {
            "id": 2,
            "title": "Эндпоинты генерации сказок",
            "description": "API для создания сказок (обычная и потоковая)",
            "status": "done",
            "details": "/api/v1/stories/generate/* endpoints"
          },
          {
            "id": 3,
            "title": "Эндпоинты управления историями",
            "description": "CRUD операции для пользовательских сказок",
            "status": "done",
            "details": "GET, DELETE /api/v1/stories/* endpoints"
          },
          {
            "id": 4,
            "title": "Служебные эндпоинты",
            "description": "Health check и правовые документы",
            "status": "done",
            "details": "/api/v1/health/, /api/v1/legal/* endpoints"
          }
        ]
      },
      {
        "id": 6,
        "title": "Система безопасности и валидации",
        "description": "Комплексная система безопасности для детского контента",
        "status": "done",
        "priority": "high",
        "dependencies": [
          "2"
        ],
        "details": "Многоуровневая система фильтрации контента, валидация входных данных, HTTPS, CORS.",
        "testStrategy": "Тестирование различных сценариев на предмет безопасности",
        "subtasks": [
          {
            "id": 1,
            "title": "Фильтрация детского контента",
            "description": "Система промптов для безопасного ИИ-контента",
            "status": "done",
            "details": "Строгие системные промпты в story_generation.py"
          },
          {
            "id": 2,
            "title": "Валидация входных данных",
            "description": "Pydantic схемы для валидации API запросов",
            "status": "done",
            "details": "Схемы в app/schemas/ с валидацией"
          },
          {
            "id": 3,
            "title": "HTTPS и CORS настройки",
            "description": "Безопасные соединения и CORS политики",
            "status": "done",
            "details": "CORS middleware в main.py"
          },
          {
            "id": 4,
            "title": "Возрастная адаптация контента",
            "description": "Адаптация сложности под возраст ребенка",
            "status": "done",
            "details": "Возрастные гайдлайны в промптах"
          }
        ]
      },
      {
        "id": 7,
        "title": "Техническая инфраструктура",
        "description": "Docker, мониторинг, логирование и производительность",
        "status": "done",
        "priority": "medium",
        "dependencies": [],
        "details": "Полная контейнеризация, мониторинг БД, структурированное логирование.",
        "testStrategy": "Тестирование Docker сборки, проверка логов",
        "subtasks": [
          {
            "id": 1,
            "title": "Docker контейнеризация",
            "description": "Dockerfile и docker-compose для развертывания",
            "status": "done",
            "details": "docker/ директория с настройками"
          },
          {
            "id": 2,
            "title": "Мониторинг базы данных",
            "description": "Middleware для отслеживания производительности БД",
            "status": "done",
            "details": "DatabaseMonitoringMiddleware реализован"
          },
          {
            "id": 3,
            "title": "Структурированное логирование",
            "description": "Логирование всех операций системы",
            "status": "done",
            "details": "Python logging во всех сервисах"
          },
          {
            "id": 4,
            "title": "Health check система",
            "description": "Эндпоинты для проверки здоровья системы",
            "status": "done",
            "details": "OpenAI health check и общий health endpoint"
          }
        ]
      },
      {
        "id": 8,
        "title": "Правовые документы и compliance",
        "description": "Политика конфиденциальности, условия использования",
        "status": "done",
        "priority": "medium",
        "dependencies": [],
        "details": "Документы для соответствия детским стандартам безопасности и App Store требованиям.",
        "testStrategy": "Проверка документов на соответствие COPPA/GDPR",
        "subtasks": [
          {
            "id": 1,
            "title": "Политика конфиденциальности",
            "description": "Документ для защиты детских данных",
            "status": "done",
            "details": "app/privacy-policy.md и API endpoint"
          },
          {
            "id": 2,
            "title": "Условия использования",
            "description": "Правила использования сервиса",
            "status": "done",
            "details": "app/terms-of-use.md и API endpoint"
          }
        ]
      },
      {
        "id": 9,
        "title": "Расширенные функции генерации",
        "description": "Дополнительные стили сказок и улучшения",
        "status": "pending",
        "priority": "low",
        "dependencies": [
          "2"
        ],
        "details": "Добавление новых стилей, системы рейтингов, персонализированных рекомендаций.",
        "testStrategy": "A/B тестирование новых функций",
        "subtasks": [
          {
            "id": 1,
            "title": "Новые стили сказок",
            "description": "Sci-Fi, Historical, Musical стили",
            "status": "pending",
            "details": "Расширение StoryStyle enum и промптов"
          },
          {
            "id": 2,
            "title": "Система рейтингов",
            "description": "Оценка качества сгенерированных сказок",
            "status": "pending",
            "details": "Добавление рейтинговой системы и избранного"
          },
          {
            "id": 3,
            "title": "Персонализированные рекомендации",
            "description": "ИИ-рекомендации на основе истории",
            "status": "pending",
            "details": "Анализ предпочтений и рекомендательная система"
          }
        ]
      },
      {
        "id": 10,
        "title": "Монетизация и Premium функции",
        "description": "Система подписок и платных возможностей",
        "status": "pending",
        "priority": "medium",
        "dependencies": [
          "2",
          "3"
        ],
        "details": "Premium подписка с расширенными возможностями и экспортом контента.",
        "testStrategy": "Тестирование платежной системы, конверсии",
        "subtasks": [
          {
            "id": 1,
            "title": "Система подписок",
            "description": "Интеграция с платежными системами",
            "status": "pending",
            "details": "Apple In-App Purchase integration"
          },
          {
            "id": 2,
            "title": "Неограниченная генерация",
            "description": "Снятие лимитов для Premium пользователей",
            "status": "pending",
            "details": "Rate limiting с учетом статуса подписки"
          },
          {
            "id": 3,
            "title": "Экспорт в PDF/аудио",
            "description": "Возможность скачивания сказок",
            "status": "pending",
            "details": "PDF генерация и TTS интеграция"
          }
        ]
      },
      {
        "id": 11,
        "title": "Мультимедиа и изображения",
        "description": "Добавление изображений к сказкам",
        "status": "pending",
        "priority": "low",
        "dependencies": [
          "2"
        ],
        "details": "Интеграция с DALL-E для генерации иллюстраций к сказкам.",
        "testStrategy": "Тестирование качества изображений, модерация",
        "subtasks": [
          {
            "id": 1,
            "title": "DALL-E интеграция",
            "description": "Генерация изображений для сказок",
            "status": "pending",
            "details": "OpenAI DALL-E API для иллюстраций"
          },
          {
            "id": 2,
            "title": "Обложки сказок",
            "description": "Автоматическая генерация обложек",
            "status": "pending",
            "details": "Визуальные обложки на основе содержания"
          }
        ]
      },
      {
        "id": 12,
        "title": "Аналитика и мониторинг",
        "description": "Система сбора метрик и аналитики",
        "status": "pending",
        "priority": "medium",
        "dependencies": [
          "1",
          "2",
          "3"
        ],
        "details": "Подробная аналитика использования для улучшения продукта.",
        "testStrategy": "Проверка корректности метрик, privacy compliance",
        "subtasks": [
          {
            "id": 1,
            "title": "Метрики пользовательской активности",
            "description": "DAU/MAU, время сессии, retention",
            "status": "pending",
            "details": "Трекинг основных бизнес-метрик"
          },
          {
            "id": 2,
            "title": "A/B тестирование платформа",
            "description": "Система для тестирования новых функций",
            "status": "pending",
            "details": "Инфраструктура для экспериментов"
          },
          {
            "id": 3,
            "title": "Дашборды для бизнеса",
            "description": "Визуализация ключевых метрик",
            "status": "pending",
            "details": "Business intelligence дашборды"
          }
        ]
      },
      {
        "id": 13,
        "title": "Система персонализированных героев сказок",
        "description": "Создать систему управления героями: пользователи могут создавать персонализированных героев с детальными характеристиками и выбирать их при генерации сказок",
        "status": "pending",
        "priority": "medium",
        "dependencies": ["2", "3"],
        "details": "Полная система управления героями: создание, редактирование, удаление героев с описанием внешности, характера и способностей. Интеграция с генерацией сказок для выбора героя из списка.",
        "testStrategy": "Тестирование CRUD операций с героями, интеграция с генерацией сказок",
        "subtasks": [
          {
            "id": 1,
            "title": "Создать модель Hero в базе данных",
            "description": "Модель героя с полями: имя, описание, внешность, характер, способности",
            "status": "pending",
            "details": "Создание модели с связью к пользователю и индексами для производительности"
          },
          {
            "id": 2,
            "title": "API эндпоинты для управления героями",
            "description": "CRUD операции: создание, просмотр, редактирование, удаление героев",
            "status": "pending",
            "details": "POST /heroes/, GET /heroes/, PUT /heroes/{id}/, DELETE /heroes/{id}/"
          },
          {
            "id": 3,
            "title": "Схемы валидации для героев",
            "description": "Pydantic схемы для валидации данных героев",
            "status": "pending",
            "details": "HeroCreate, HeroUpdate, HeroOut схемы с валидацией"
          },
          {
            "id": 4,
            "title": "Обновить модель Story для связи с Hero",
            "description": "Добавить связь Story -> Hero вместо текстового поля hero_name",
            "status": "pending",
            "details": "Foreign key на Hero, обновить индексы и relationships"
          },
          {
            "id": 5,
            "title": "Обновить сервис генерации сказок",
            "description": "Использовать данные героя при генерации вместо только имени",
            "status": "pending",
            "details": "Интеграция описания, внешности и способностей героя в промпты"
          },
          {
            "id": 6,
            "title": "Создать миграцию базы данных",
            "description": "Alembic миграция для добавления таблицы heroes и обновления stories",
            "status": "pending",
            "details": "Миграция с созданием новой таблицы и обновлением связей"
          }
        ]
      }
    ],
    "metadata": {
      "created_at": "2025-01-26",
      "project_name": "Fairy Tales Backend",
      "version": "1.0",
      "total_tasks": 13,
      "completed_tasks": 8,
      "pending_tasks": 5
    }
  }
}